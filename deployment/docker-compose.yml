version: '1'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181"
    hostname: zookeeper
  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    ports:
      - "9092:9092"
    hostname: kafka
    environment:
      KAFKA_CREATE_TOPICS: "events:1:1" # topic:partition:replicas
      KAFKA_ADVERTISED_HOST_NAME: stinky.westus3.cloudapp.azure.com # docker-machine ip
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://stinky.westus3.cloudapp.azure.com:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - "zookeeper"
  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_DATABASE: 'acmestocks'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - my-db:/var/lib/mysql
  audit_log:
    build:
      context: ../audit
    depends_on:
      - storage
    container_name: audit
    ports:
      - 8110

  processing:
    build:
      context: ../processing
    depends_on:
      - storage
    container_name: processing
    expose:
      - 8100

  receiver:
    build:
      context: ../receiver
    depends_on:
      - storage
    container_name: receiver
    expose:
      - 8080

  storage:
    build:
      context: ../storage
    depends_on:
      - db
    container_name: storage
    expose:
      - 8090
      
volumes:
  my-db: {}
